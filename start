#!/usr/bin/env bash
# Start Caliopen service for development purpose.
# Refer to README file for further information

usage() {
  cat <<USAGE
Start caliopen containers

  eg. CALIOPEN_ENV=staging ./start

  this command support the following environments:
  - development       (default) every caliopen repositories are mounted and watched so easy to hack
  - staging   every containers are started on the current host (no scalability)
USAGE
  exit 1
}

[[ -z $CALIOPEN_ENV ]] && CALIOPEN_ENV="development"

[[ $CALIOPEN_ENV == "development" ]] && COMPOSE_FILE="docker-compose.yml" && echo "Start development environment"
[[ $CALIOPEN_ENV == "staging" ]] && COMPOSE_FILE="docker-compose-staging.yml" && echo "Start staging environment"


DEV_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source "${DEV_DIR}/common.sh"

WEB_DIR="${CALIOPEN_DIR}/web"
API_DIR="${CALIOPEN_DIR}/api"
VENV_DIR="${CALIOPEN_DIR}/venv"

COMPOSE_CMD="docker-compose"

##################################################
# Setup python package for development purpose in container
# Globals:
#   BASE_DEV_PACKAGE_DIR
#   DEV_PACKAGE_PREFIX
# Arguments:
#   target container
#   list of mounted packages
# Returns:
#   None
##################################################
BASE_DEV_PACKAGE_DIR="/srv/caliopen/src/"
DEV_PACKAGE_PREFIX="caliopen."

setupDevelop() {
  for PACKAGE in $2; do
    $COMPOSE_CMD run $1 /bin/bash -c "(cd $BASE_DEV_PACKAGE_DIR$DEV_PACKAGE_PREFIX$PACKAGE/ && python setup.py develop)"
  done

  $COMPOSE_CMD run $1 python setup.py develop
}
##################################################

# Create data folders
cd "${CALIOPEN_DIR}"
[[ -d "${CALIOPEN_DIR}/.data/cassandra/data" ]] || mkdir -p "${CALIOPEN_DIR}/.data/cassandra/data"
[[ -d "${CALIOPEN_DIR}/.data/elasticsearch/data" ]] || mkdir -p "${CALIOPEN_DIR}/.data/elasticsearch/data"

# A fixed Current Working Directory is required to ensure
# data directories are always the same.
cd "${DEV_DIR}"

echo "Stop existing containers"
$COMPOSE_CMD kill

echo "Start containers"
$COMPOSE_CMD -f $COMPOSE_FILE up -d redis cassandra elasticsearch api web-client-ng web smtp

[[ $CALIOPEN_ENV == "development" ]] && echo "setup api for dev" && setupDevelop "api" "base base.user base.message api.base api.user api.message"
[[ $CALIOPEN_ENV == "development" ]] && echo "setup cli for dev" && setupDevelop "cli" "messaging base base.user base.message smtp"
[[ $CALIOPEN_ENV == "development" ]] && echo "setup cli for dev" && setupDevelop "smtp" "messaging base base.user base.message"

sleep 20

# Update storage engines models
CALIOPEN_CONFIG_PATH=/caliopen.yaml
${COMPOSE_CMD} run cli caliopen -f ${CALIOPEN_CONFIG_PATH} setup
