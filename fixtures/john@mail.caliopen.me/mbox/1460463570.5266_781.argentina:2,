Received: from list by lists.gnu.org with archive (Exim 4.71)
	id 1amkkw-0000lY-RM
	for mharc-john@mail.caliopen.me; Sun, 03 Apr 2016 12:20:06 -0400
Received: from eggs.gnu.org ([2001:4830:134:3::10]:50430)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <eliz@gnu.org>) id 1amkku-0000kP-55
	for john@mail.caliopen.me; Sun, 03 Apr 2016 12:20:05 -0400
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <eliz@gnu.org>) id 1amkks-0001Mr-Uv
	for john@mail.caliopen.me; Sun, 03 Apr 2016 12:20:04 -0400
Received: from fencepost.gnu.org ([2001:4830:134:3::e]:55856)
	by eggs.gnu.org with esmtp (Exim 4.71) (envelope-from <eliz@gnu.org>)
	id 1amkkn-0001KA-Qv; Sun, 03 Apr 2016 12:19:57 -0400
Received: from 84.94.185.246.cable.012.net.il ([84.94.185.246]:3409
	helo=home-c4e4a596f7)
	by fencepost.gnu.org with esmtpsa (TLS1.2:RSA_AES_128_CBC_SHA1:128)
	(Exim 4.82) (envelope-from <eliz@gnu.org>)
	id 1amkkk-0003R1-MH; Sun, 03 Apr 2016 12:19:57 -0400
Date: Sun, 03 Apr 2016 19:19:26 +0300
Message-Id: <83zitapsvl.fsf@gnu.org>
From: Eli Zaretskii <eliz@gnu.org>
To: Ingo Lohmar <i.lohmar@gmail.com>
In-reply-to: <8737r2el7d.fsf@acer.localhost.com> (message from Ingo Lohmar on
	Sun, 03 Apr 2016 18:00:38 +0200)
Subject: Re: Understanding a recent commit in emacs-25 branch [ed19f2]
References: <CAFyQvY16kxTqhHrWCVSVU64FM9_VUiXbpnxDRVBmOE1Cj9SicA@mail.gmail.com>
	<CAFyQvY1c1FvSOyNk_OxbSP5-prM-mXoMekFNRrbsUC0V=3xubA@mail.gmail.com>
	<20160403111708.GA3537@acm.fritz.box>
	<87lh4uex9h.fsf@acer.localhost.com>
	<20160403121458.GC3537@acm.fritz.box>
	<87bn5qeuxo.fsf@acer.localhost.com> <838u0urb1w.fsf@gnu.org>
	<8760vyemy0.fsf@acer.localhost.com> <8337r2r996.fsf@gnu.org>
	<8737r2el7d.fsf@acer.localhost.com>
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
X-Received-From: 2001:4830:134:3::e
Cc: acm@muc.de, kaushal.modi@gmail.com, john@mail.caliopen.me
X-BeenThere: emacs-devel@gnu.org
X-Mailman-Version: 2.1.14
Precedence: list
Reply-To: Eli Zaretskii <eliz@gnu.org>
List-Id: "Emacs development discussions." <emacs-devel.gnu.org>
List-Unsubscribe: <https://lists.gnu.org/mailman/options/emacs-devel>,
	<mailto:emacs-devel-request@gnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/archive/html/emacs-devel>
List-Post: <mailto:emacs-devel@gnu.org>
List-Help: <mailto:emacs-devel-request@gnu.org?subject=help>
List-Subscribe: <https://lists.gnu.org/mailman/listinfo/emacs-devel>,
	<mailto:emacs-devel-request@gnu.org?subject=subscribe>
X-List-Received-Date: Sun, 03 Apr 2016 16:20:05 -0000
Content-Length: 1830
Lines: 42

> From: Ingo Lohmar <i.lohmar@gmail.com>
> Cc: acm@muc.de, john@mail.caliopen.me, kaushal.modi@gmail.com
> Date: Sun, 03 Apr 2016 18:00:38 +0200
> 
> On Sun, Apr 03 2016 18:40 (+0300), Eli Zaretskii wrote:
> > I think your documentation might be outdated.  Here's what the "git
> > pull" man page I have says:
> >
> >   In Git 1.7.0 or later, to cancel a conflicting merge, use git reset
> >   --merge. Warning: In older versions of Git, running git pull with
> >   uncommitted changes is discouraged: while possible, it leaves you in a
> >   state that may be hard to back out of in the case of a conflict.
> >
> >   If any of the remote changes overlap with local uncommitted changes,
> >   the merge will be automatically cancelled and the work tree
> >   untouched. It is generally best to get any local changes in working
> >   order before pulling or stash them away with git-stash(1).
> >
> > This is with Git 2.8.0.
> >
> > IOW, for a recent enough Git, they _recommend_ stashing, but no longer
> > _warn_ about merging in this situation.  Which is exactly my
> > experience.
> 
> For the sake of completeness, my 'git merge' man page for 2.8.0.rc3 says
> (in the DESCRIPTION section):
> 
>        Warning: Running git merge with non-trivial uncommitted changes
>        is discouraged: while possible, it may leave you in a state that
>        is hard to back out of in the case of a conflict.

But we were talking about "git pull", not about merge.

> > I agree that it's preferable to have a clean repo, but in practice it
> > doesn't always work to have it.  Being able to pull when you have
> > uncommitted changes is an important feature; a VCS that doesn't
> > support it is IMO severely broken, because it will get in the way.
> 
> We'll just have to disagree about the "severely broken" part.

Yes, let's do that.

