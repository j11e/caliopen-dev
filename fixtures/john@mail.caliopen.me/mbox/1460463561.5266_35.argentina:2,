Received: from list by lists.gnu.org with archive (Exim 4.71)
	id 1aNWYx-0007Xj-83
	for mharc-john@mail.caliopen.me; Sun, 24 Jan 2016 21:07:27 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:58814)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mituharu@math.s.chiba-u.ac.jp>) id 1aNWYu-0007WG-9L
	for john@mail.caliopen.me; Sun, 24 Jan 2016 21:07:25 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mituharu@math.s.chiba-u.ac.jp>) id 1aNWYr-00034b-2k
	for john@mail.caliopen.me; Sun, 24 Jan 2016 21:07:24 -0500
Received: from mathmail.math.s.chiba-u.ac.jp ([133.82.132.2]:62186)
	by eggs.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mituharu@math.s.chiba-u.ac.jp>) id 1aNWYq-00032b-Js
	for john@mail.caliopen.me; Sun, 24 Jan 2016 21:07:21 -0500
Received: from fermat1.math.s.chiba-u.ac.jp (fermat [192.168.32.10])
	by mathmail.math.s.chiba-u.ac.jp (Postfix) with ESMTP id 0CC49C0560
	for <john@mail.caliopen.me>; Mon, 25 Jan 2016 11:07:17 +0900 (JST)
Date: Mon, 25 Jan 2016 11:07:16 +0900
Message-ID: <wlvb6il8dn.wl%mituharu@math.s.chiba-u.ac.jp>
From: YAMAMOTO Mitsuharu <mituharu@math.s.chiba-u.ac.jp>
To: john@mail.caliopen.me
Subject: About x_draw_xwidget_glyph_string
User-Agent: Wanderlust/2.14.0 (Africa) SEMI/1.14.6 (Maruoka) FLIM/1.14.8
	(=?ISO-8859-4?Q?Shij=F2?=) APEL/10.6 Emacs/22.3 (sparc-sun-solaris2.8)
	MULE/5.0 (SAKAKI)
Organization: Faculty of Science, Chiba University
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 133.82.132.2
X-BeenThere: emacs-devel@gnu.org
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: "Emacs development discussions." <emacs-devel.gnu.org>
List-Unsubscribe: <https://lists.gnu.org/mailman/options/emacs-devel>,
	<mailto:emacs-devel-request@gnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/archive/html/emacs-devel>
List-Post: <mailto:emacs-devel@gnu.org>
List-Help: <mailto:emacs-devel-request@gnu.org?subject=help>
List-Subscribe: <https://lists.gnu.org/mailman/listinfo/emacs-devel>,
	<mailto:emacs-devel-request@gnu.org?subject=subscribe>
X-List-Received-Date: Mon, 25 Jan 2016 02:07:25 -0000
Content-Length: 2091
Lines: 51

I have a question and a comment about x_draw_xwidget_glyph_string in
src/xwidget.c.

1. Question about xwidget initialization.

   559	x_draw_xwidget_glyph_string (struct glyph_string *s)
   560	{
   561	  /* This method is called by the redisplay engine and places the
   562	     xwidget on screen.  Moving and clipping is done here.  Also view
   563	     initialization.  */
   564	  struct xwidget *xww = s->xwidget;
   565	  struct xwidget_view *xv = xwidget_view_lookup (xww, s->w);
(snip)
   574	  /* Do initialization here in the display loop because there is no
   575	     other time to know things like window placement etc.  */
   576	  xv = xwidget_init_view (xww, s, x, y);

Line 576 indicates a new xwidget view is created in every
x_draw_xwidget_glyph_string call.  But this makes xwidget-view-list
longer and longer, and looks like a waste of memory, if not a leak.
Also, if it is an intended behavior, then it looks strange to look up
a view at Line 565.

2. Comment on clipping.

   578	  /* Calculate clipping, which is used for all manner of onscreen
   579	     xwidget views.  Each widget border can get clipped by other emacs
   580	     objects so there are four clipping variables.  */
   581	  clip_right =
   582	    min (xww->width,
   583	         WINDOW_RIGHT_EDGE_X (s->w) - x -
   584	         WINDOW_RIGHT_SCROLL_BAR_AREA_WIDTH (s->w) -
   585	         WINDOW_RIGHT_FRINGE_WIDTH (s->w));
   586	  clip_left =
   587	    max (0,
   588	         WINDOW_LEFT_EDGE_X (s->w) - x +
   589	         WINDOW_LEFT_SCROLL_BAR_AREA_WIDTH (s->w) +
   590	         WINDOW_LEFT_FRINGE_WIDTH (s->w));
   591	
   592	  clip_bottom =
   593	    min (xww->height,
   594	         WINDOW_BOTTOM_EDGE_Y (s->w) - WINDOW_MODE_LINE_HEIGHT (s->w) - y);
   595	  clip_top = max (0, WINDOW_TOP_EDGE_Y (s->w) - y);

I think the calculation of clipping should use the function window_box
rather than manual calculation with various window macros.  Otherwise,
xwidget views will cover horizontal scroll bars, for example.

				     YAMAMOTO Mitsuharu
				mituharu@math.s.chiba-u.ac.jp

