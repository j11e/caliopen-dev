Received: from list by lists.gnu.org with archive (Exim 4.71)
	id 1akcGl-0003vJ-Rt
	for mharc-john@mail.caliopen.me; Mon, 28 Mar 2016 14:52:07 -0400
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47576)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <larsi@gnus.org>) id 1akcGj-0003vA-Rh
	for john@mail.caliopen.me; Mon, 28 Mar 2016 14:52:07 -0400
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <larsi@gnus.org>) id 1akcGe-0004se-Rv
	for john@mail.caliopen.me; Mon, 28 Mar 2016 14:52:05 -0400
Received: from hermes.netfonds.no ([80.91.224.195]:43075)
	by eggs.gnu.org with esmtp (Exim 4.71)
	(envelope-from <larsi@gnus.org>) id 1akcGe-0004sU-LD
	for john@mail.caliopen.me; Mon, 28 Mar 2016 14:52:00 -0400
Received: from cm-84.215.1.64.getinternet.no ([84.215.1.64] helo=stories)
	by hermes.netfonds.no with esmtpsa
	(TLS1.2:DHE_RSA_AES_128_CBC_SHA1:128) (Exim 4.84_2)
	(envelope-from <larsi@gnus.org>) id 1akcGZ-0004CT-5z
	for john@mail.caliopen.me; Mon, 28 Mar 2016 20:51:59 +0200
From: Lars Magne Ingebrigtsen <larsi@gnus.org>
To: john@mail.caliopen.me
Subject: Re: Thinking about changed buffers
References: <m3bn5ya4ro.fsf@gnus.org>
Face: iVBORw0KGgoAAAANSUhEUgAAADAAAAAwBAMAAAClLOS0AAAAGFBMVEW0Al1XBiWYMFBuDypJ
	CRmIFDVBCBZgDCRYqWUPAAACMElEQVQ4jWWSQXeiQAzHs9LRa/u6zzMP6p0tgle3TvHKU5ErrUO8
	2oLw9TfJDNRu85SB/Cb/ZJIBEAuRba34qRMfYGH9qiXHEXNgYGIfnKlkn2E9wwqmTDa7wQ9AIFIY
	ARw5JPEHvyqzGqB7pS+vQ2wkJKd/sdzQs8OeP+6I5E5r3/BCMhzDFVx964+Fz8jjNtgd+/ZiI0me
	8lNpRnYULcIIDCugrGqJJwcoLdY2iQYokQ4m5tXSmIiTGPAyRFfc7FVALeeXEgalqwCzE5BKIomZ
	XiyIlQM1KCn7WDsADlRw0AzSk4BzApnNUUGLfMS04oS4TTg7gwiWXLHqLIiTibJSAE98xn13zlhc
	JSEM4ECVFXt2846iXE8ZUBOWiIdkUTKo4CVsTwQ6euW7EOegDGldAMPMTBjkMs5E01p3Gib4TD6E
	OaUoST3aSNvX1PT6Q1+OMD+Dt0JpZIempTDEP/gyhXkFXiqAJmu0HTC+ewJkpErTVevttPBtAnNy
	ZRuZF+IuAHsZqeHzcdx2rBa8kWectgO/pJE+PPLHAa3x+xMrPeRwhZXGwWjXREQfPuF+hjf2rFJZ
	dQP3x1uAmV30llrizGS3b1tb50+A/wPjOT1Iv8tXNFVj9C04N23X9zQn1Bz9BQJrdKeM7rX+Caj8
	bf/xewTnzyCgX2FB3w7gRN0vLiqPuLumicObqqxZUCwgNUMbRqD/NmEAq612wMjTvzNNv4kDKLX+
	FpHPKHXTBP8Asp0rd6AX3DMAAAAASUVORK5CYII=
Date: Mon, 28 Mar 2016 20:51:54 +0200
In-Reply-To: <m3bn5ya4ro.fsf@gnus.org> (Lars Magne Ingebrigtsen's message of
	"Mon, 28 Mar 2016 19:31:07 +0200")
Message-ID: <m3r3euigfp.fsf@gnus.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/25.1.50 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
X-Received-From: 80.91.224.195
X-BeenThere: emacs-devel@gnu.org
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: "Emacs development discussions." <emacs-devel.gnu.org>
List-Unsubscribe: <https://lists.gnu.org/mailman/options/emacs-devel>,
	<mailto:emacs-devel-request@gnu.org?subject=unsubscribe>
List-Archive: <http://lists.gnu.org/archive/html/emacs-devel>
List-Post: <mailto:emacs-devel@gnu.org>
List-Help: <mailto:emacs-devel-request@gnu.org?subject=help>
List-Subscribe: <https://lists.gnu.org/mailman/listinfo/emacs-devel>,
	<mailto:emacs-devel-request@gnu.org?subject=subscribe>
X-List-Received-Date: Mon, 28 Mar 2016 18:52:07 -0000
Content-Length: 1375
Lines: 45

Lars Magne Ingebrigtsen <larsi@gnus.org> writes:

> 1) Speed.

And I had an idea here, too.  :-)  `buffer-modified-p' is today just
this simple integer comparison:

DEFUN ("buffer-modified-p", Fbuffer_modified_p, Sbuffer_modified_p,
[...]
  return BUF_SAVE_MODIFF (buf) < BUF_MODIFF (buf) ? Qt : Qnil;
}

How could it look under a hashey regime?  Pseudoish code coming up:

{
  if (BUF_SAVE_MODIFF (buf) == BUF_MODIFF (buf))
    return Qnil;
  if (BUF_SAVE_HASHED_SIZE (buf) != BUF_HASHED_SIZE (buf))
    return Qt;
  same = string_equal(buffer_hash (buf), buf->save_hash);
  if (! NILP (same))
    buf->text->save_modiff = buf->text->modiff;
  return same;
}

Uhm...  is that correct?  *squints*  Perhaps.

Anyway, if we do it this way (that is, keep the modiff counter around),
we can short circuit the hash calculation like, almost always.  It would
only be necessary (the first time per ... time) the buffer reaches the
same size that it used to be.

That is, it would basically happen in the "insert an 'a' and then delete
the 'a'" case, but very seldom otherwise, so `buffer-modified-p' would
be almost as fast as it usually is.

Now I'm kinda starting to think that this isn't just feasible, but
possible in practice, too.  :-)

I might be totally wrong, though.

-- 
(domestic pets only, the antidote for overdose, milk.)
   bloggy blog: http://lars.ingebrigtsen.no

